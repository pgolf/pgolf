# Sysadmin settings like hosts, credentials, paths, cache settings, and loglevels


[reverse_proxy]
scheme=http
host=localhost.com
port=80

[hosts]
# setted here but just as information, it may not be used.
zeo = localhost
zeo-buildbot = localhost
instance= localhost
instance1=localhost
instance2=localhost
instance3=localhost
instance4=localhost
instance-worker=localhost
instance-newsletter=localhost
instance-cynin=localhost
instance-buildbot=localhost
#may not be used
supervisor=127.0.0.1
balancer=127.0.0.1
syslog = 127.0.0.1
solr = 127.0.0.1
buildbot-master=127.0.0.1
staging=host
zope-front=${hosts:instance1}
#zope-front=${hosts:balancer} 
deliverance=localhost
deliverance-backend=${hosts:zope-front}

[ports]
# other instances, in case.
zeo = 25554
zeo-buildbot =
instance=25555
instance1=25556
instance2=25557
instance3=25558
instance4=25559
instance-worker=25564
instance-newsletter=25560
instance-cynin=25562
cynin-webdav=25563
instance-buildbot=25561
#may not be used
supervisor=9001
balancer=8201
solr = 8983
buildbot-master-control=9081
buildbot-master-web=9080
zope-front=${ports:instance1}
#zope-front=${ports:balancer}
deliverance=8078
deliverance-backend=${ports:zope-front}




[buildbot]
slave-password=i_am_a_buildbot_slave_password

[crons]
# at 3:00am NO WHITESPACE!!!
buildbot-pgolf=0 3 * * *
# at 1:03am
zope-restart=15 1 * * *
zope-pack=30 1 * * *
# at 1:05am
repozo-daily=05 1 * * *
# only sunday at 1:10am
repozo-weekly=10 1 * * 6
# number of backups to rotate
nb_backups_to_keep=16

#for non standart port use host:port
#host=localhost
#port=5432
#dbname=minitagedb
#user=kiorky
#password=secret

[zope]
user=admin
password=secret
debug-mode=OFF
verbose-security=off
z2-log-level=INFO
event-log-level=INFO

[cache]
zeo-client-cache-size = 80MB
session-timeout-minutes=90

[plone]
# Site ID
site = pgolf

[users]
#system user
zope=kiorky
#haproxy user
staging=user

[supervisor-webadmin]
user=admin
password=secret

[locations]
# aboslute paths to avoid buildout auto build of reffered part
deliverance-themes=${buildout:directory}/src/themes
solr = $solr_path
blob-storage=${buildout:directory}/var/blobstorage/storage
blob-backup=${buildout:directory}/var/blobstorage/backup

testfss-backup=  ${buildout:directory}/parts/instance/var/fss_backup
testfss-storage= ${buildout:directory}/parts/instance/var/fss_storage
fss=${buildout:directory}/var/fss
global-fss-backup=  ${locations:fss}/fss_backup_global
global-fss-storage= ${locations:fss}/fss_storage_global
fss-backup=  ${locations:fss}/fss_backup_pgolf
fss-storage= ${locations:fss}/fss_storage_pgolf
buildbot-testfss-backup=  ${buildout:directory}/parts/instance-buildbot/var/fss_backup
buildbot-testfss-storage= ${buildout:directory}/parts/instance-buildbot/var/fss_storage
#testfss-backup-newsletter= ${buildout:directory}/parts/instance-newsletter/var/fss_backup
#testfss-storage-newsletter=${buildout:directory}/parts/instance-newsletter/var/fss_storage
#fss-backup-newsletter= ${buildout:directory}/var/fss/fss_backupnewsletter_pgolf
#fss-storage-newsletter=${buildout:directory}/var/fss/fss_storagenewsletter_pgolf 
#testfss-backup-cynin= ${buildout:directory}/parts/instance-cynin/var/fss_backup
#testfss-storage-cynin=${buildout:directory}/parts/instance-cynin/var/fss_storage
#fss-backup-cynin= ${buildout:directory}/var/fss/fss_backupcynin_pgolf
#fss-storage-cynin=${buildout:directory}/var/fss/fss_storagecynin_pgolf
blob-backups=${buildout:directory}/var/blobbackups
fss-backups=${buildout:directory}/var/fssbackups 
staging=/

# if you want separated FSS directories, you can use that
#testfss-backup1= ${buildout:directory}/parts/instance1/var/fss_backup
#testfss-storage1=${buildout:directory}/parts/instance1/var/fss_storage
#testfss-backup2= ${buildout:directory}/parts/instance2/var/fss_backup
#testfss-storage2=${buildout:directory}/parts/instance2/var/fss_storage
#testfss-backup3= ${buildout:directory}/parts/instance3/var/fss_backup
#testfss-storage3=${buildout:directory}/parts/instance3/var/fss_storage
#testfss-backup4= ${buildout:directory}/parts/instance4/var/fss_backup
#testfss-storage4=${buildout:directory}/parts/instance4/var/fss_storage

#fss-backup1= ${buildout:directory}/var/fss_backup1_pgolf
#fss-storage1=${buildout:directory}/var/fss_storage1_pgolf
#fss-backup2= ${buildout:directory}/var/fss_backup2_pgolf
#fss-storage2=${buildout:directory}/var/fss_storage2_pgolf
#fss-backup3= ${buildout:directory}/var/fss_backup3_pgolf
#fss-storage3=${buildout:directory}/var/fss_storage3_pgolf
#fss-backup4= ${buildout:directory}/var/fss_backup4_pgolf
#fss-storage4=${buildout:directory}/var/fss_storage4_pgolf


# Command below is important
# if not, fss tests or tests using fss in their configuration will fail
# You can add here directories to create
[mkdirs]
command =
#    mkdir -pv ${buildout:directory}/foo


#do not remove, internal for zeoserver eggs buildout & extends
[zeoserver]
eggs=

[mirrors]
minitage-globalenv=true
allow-hosts =
     *localhost*
     *willowrise.org*
     *plone.org*
     *zope.org*
     *effbot.org*
     *python.org*
     *pybrary.net*
     *initd.org*
     *googlecode.com*
     *plope.com*
     *bitbucket.org*
     *repoze.org*
     *crummy.com*
     *minitage.org*
     *.selenic.com*
sourceforge = ovh.dl.sourceforge.net
minitage = distfiles.minitage.org/public/externals/minitage
plone = plone.org
zope = download.zope.org
# vim:set ft=cfg:
